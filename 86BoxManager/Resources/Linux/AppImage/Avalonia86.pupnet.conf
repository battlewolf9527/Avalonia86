################################################################################
# PUPNET DEPLOY: 1.8.0
################################################################################

########################################
# APP PREAMBLE
########################################

# Mandatory application base name. This MUST BE the base name of the main executable file. It should NOT
# include any directory part or extension, i.e. do not append '.exe' or '.dll'. It should not contain
# spaces or invalid filename characters.
AppBaseName = Avalonia86

# Mandatory application friendly name.
AppFriendlyName = Avalonia 86

# Mandatory application ID in reverse DNS form. This should stay constant for lifetime of the software.
AppId = notbald.avalonia86

# Mandatory application version and package release of form: 'VERSION[RELEASE]'. Use optional square
# brackets to denote package release, i.e. '1.2.3[1]'. Release refers to a change to the deployment
# package, rather the application. If release part is absent (i.e. '1.2.3'), the release value defaults
# to '1'. Note that the version-release value given here may be overridden from the command line.
AppVersionRelease = 1.3.0

# Mandatory single line application summary text in default (English) language.
AppShortSummary = A 86Box Manager

# Mandatory application license ID. This should be one of the recognized SPDX license
# identifiers, such as: 'MIT', 'GPL-3.0-or-later' or 'Apache-2.0'. For a proprietary or
# custom license, use 'LicenseRef-Proprietary' or 'LicenseRef-LICENSE'.
AppLicenseId = MIT

########################################
# PUBLISHER
########################################

# Mandatory publisher, group or creator.
PublisherName = notBald

# Publisher or application web-link URL. Although optional, it should be considered mandatory if using
# MetaFile
PublisherLinkUrl = https://github.com/notBald/Avalonia86

########################################
# DESKTOP INTEGRATION
########################################

# Boolean (true or false) which indicates whether the application is hidden on the desktop. It is used to
# populate the 'NoDisplay' field of the .desktop file. The default is false. Setting to true will also
# cause the main application start menu entry to be omitted for Windows Setup.
DesktopNoDisplay = false

# Boolean (true or false) which indicates whether the application runs in the terminal, rather than
# providing a GUI. It is used to populate the 'Terminal' field of the .desktop file.
DesktopTerminal = false

# Optional category for the application. The value should be one of the recognized Freedesktop top-level
# categories, such as: Audio, Development, Game, Office, Utility etc. Only a single value should be
# provided here which will be used, where supported, to populate metadata. The default is empty.
# See: https://specifications.freedesktop.org/menu-spec/latest/apa.html
PrimeCategory = Utility

# Optional icon file paths. The value may include multiple filenames separated with semicolon or given
# in multi-line form. Valid types are SVG, PNG and ICO (ICO ignored on Linux). Note that the inclusion
# of a scalable SVG is preferable on Linux, whereas PNGs must be one of the standard sizes and MUST
# include the size in the filename in the form: name.32x32.png' or 'name.32.png'.
IconFiles = """
    Deploy/Avalonia86.svg
"""

########################################
# DOTNET PUBLISH
########################################

# Optional path relative to this file in which to find the dotnet project (.csproj) file, or the
# directory containing it. If empty (default), a single project file is expected under the same
# directory as this file. IMPORTANT. If set to 'NONE', dotnet publish is disabled
# (i.e. not called). Instead, only DotnetPostPublish is called.
DotnetProjectPath = NONE

DotnetPostPublish = Deploy/PostPublish.sh
DotnetPostPublishOnWindows = Deploy/PostPublish.bat

########################################
# PACKAGE OUTPUT
########################################

# Output directory, or subdirectory relative to this file. It will be created if it does not exist and
# will contain the final deploy output files. If empty, it defaults to the location of this file.
OutputDirectory = Deploy/bin

########################################
# APPIMAGE OPTIONS
########################################

# Additional arguments for use with appimagetool. Useful for signing. Default is empty.
AppImageArgs =

# Boolean (true or false) which sets whether to include the application version in the AppImage filename,
# i.e. 'HelloWorld-1.2.3-x86_64.AppImage'. Default is false. It is ignored if the output filename is
# specified at command line.
AppImageVersionOutput = false

########################################
# FLATPAK OPTIONS
########################################

# The runtime platform. Invariably for .NET (inc. Avalonia), this should be 'org.freedesktop.Platform'.
# Refer: https://docs.flatpak.org/en/latest/available-runtimes.html
FlatpakPlatformRuntime = org.freedesktop.Platform

# The platform SDK. Invariably for .NET (inc. Avalonia applications) this should be 'org.freedesktop.Sdk'.
# The SDK must be installed on the build system.
FlatpakPlatformSdk = org.freedesktop.Sdk

# The platform runtime version. The latest available version may change periodically.
# Refer to Flatpak documentation.
FlatpakPlatformVersion = 23.08

# Flatpak manifest 'finish-args' sandbox permissions. Optional, but if empty, the application will have
# extremely limited access to the host environment. This option may be used to grant required
# application permissions. Values here should be prefixed with '--' and separated by semicolon or given
# in multi-line form. Refer: https://docs.flatpak.org/en/latest/sandbox-permissions.html
FlatpakFinishArgs = """
    --socket=wayland
    --socket=x11
    --filesystem=host
    --share=network
"""

# Additional arguments for use with flatpak-builder. Useful for signing. Default is empty.
# See flatpak-builder --help.
FlatpakBuilderArgs =

########################################
# RPM OPTIONS
########################################

# Boolean (true or false) which specifies whether to build the RPM package with 'AutoReq' equal to yes or no.
# For dotnet application, the value should typically be false, but see RpmRequires below.
# Refer: https://rpm-software-management.github.io/rpm/manual/spec.html
RpmAutoReq = false

# Boolean (true or false) which specifies whether to build the RPM package with 'AutoProv' equal to yes or no.
# Refer: https://rpm-software-management.github.io/rpm/manual/spec.html
RpmAutoProv = true

# Optional list of RPM dependencies. The list may include multiple values separated with semicolon or given
# in multi-line form. If empty, a self-contained dotnet package will successfully run on many (but not all)
# Linux distros. In some cases, it will be necessary to explicitly specify additional dependencies.
# Default values are recommended for use with dotnet and RPM packages at the time of writing.
# For updated information, see: https://learn.microsoft.com/en-us/dotnet/core/install/linux-rhel#dependencies
RpmRequires = """
    krb5-libs
    libicu
    openssl-libs
    zlib
"""

########################################
# DEBIAN OPTIONS
########################################

# Optional list of Debian dependencies. The list may include multiple values separated with semicolon or given
# in multi-line form. If empty, a self-contained dotnet package will successfully run on many (but not all)
# Linux distros. In some cases, it will be necessary to explicitly specify additional dependencies.
# Default values are recommended for use with dotnet and Debian packages at the time of writing.
# For updated information, see: https://learn.microsoft.com/en-us/dotnet/core/install/linux-ubuntu#dependencies
DebianRecommends = """
    libc6
    libgcc1
    libgcc-s1
    libgssapi-krb5-2
    libicu
    libssl
    libstdc++6
    libunwind
    zlib1g
"""

########################################
# WINDOWS SETUP OPTIONS
########################################

# Optional application group name used as the Start Menu folder and install directory under Program Files.
# Specifically, it is used to define the InnoSetup DefaultGroupName and DefaultDirName parameters.
# If empty (default), suitable values are used based on your application.
# See: https://jrsoftware.org/ishelp/index.php?topic=setup_defaultgroupname
SetupGroupName = Hello World Demo

# Boolean (true or false) which specifies whether the application is to be installed in administrative
# mode, or per-user. Default is false. See: https://jrsoftware.org/ishelp/topic_admininstallmode.htm
SetupAdminInstall = false

# Optional command prompt title. The Windows installer will NOT add your application to the path. However,
# if your package contains a command-line utility, setting this value will ensure that a 'Command Prompt'
# program menu entry is added (with this title) which, when launched, will open a dedicated command
# window with your application directory in its path. Default is empty. See also StartCommand.
SetupCommandPrompt = Command Prompt

# Mandatory value which specifies minimum version of Windows that your software runs on. Windows 8 = 6.2,
# Windows 10/11 = 10. Default: 10. See: https://jrsoftware.org/ishelp/topic_setup_minversion.htm
SetupMinWindowsVersion = 10

# Optional name and parameters of the Sign Tool to be used to digitally sign: the installer,
# uninstaller, and contained exe and dll files. If empty, files will not be signed.
# See: https://jrsoftware.org/ishelp/topic_setup_signtool.htm
SetupSignTool =

# Optional suffix for the installer output filename. The default is empty, but you may wish set it to:
# 'Setup' or similar. This, for example, will output a file of name: HelloWorldSetup-x86_64.exe
# Ignored if the output filename is specified at command line.
SetupSuffixOutput =

# Boolean (true or false) which sets whether to include the application version in the setup filename,
# i.e. 'HelloWorld-1.2.3-x86_64.exe'. Default is false. Ignored if the output filename is specified
# at command line.
SetupVersionOutput = false
